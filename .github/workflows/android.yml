name: Android CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    env:
      GRADLE_OPTS: -Dorg.gradle.jvmargs=-Xmx3072m -XX:MaxMetaspaceSize=1024m

    runs-on: ubuntu-latest
    timeout-minutes: 100

    strategy:
      matrix:
        api-level: [ 33 ]
        target: [ google_apis ]

    steps:
      - name: Clone Repo
        uses: actions/checkout@v4

      - name: set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Create empty google-services.json
        run: cat /home/runner/work/fitmeter/fitmeter/app/google-services.json | base64

      - name: Putting data into google-services.json
        env:
          DATA: ${{ secrets.GOOGLE_SERVICES_JSON }}
        run: echo $DATA > /home/runner/work/fitmeter/fitmeter/app/google-services.json

      - name: Assemble Debug APK
        run: ./gradlew assembleDebug

      - name: Run Kotlin Linter
        run: ./gradlew ktlintDebugSourceSetCheck

      - name: Run Android Linter
        run: ./gradlew lintDebug

      - name: Run unit tests
        run: ./gradlew testDebugUnitTest

      - name: Upload Unit Test Report Directory
        uses: actions/upload-artifact@v4
        with:
          name: testDebugUnitTest
          path: app/build/reports/tests/testDebugUnitTest/
          retention-days: 1

      - name: Publish Unit Test Report
        uses: dorny/test-reporter@v1
        if: success() || failure()    # run this step even if previous step failed
        with:
          name: JUnit Test Report     # Name of the check run which will be created
          path: |
            **/build/test-results/test*/**/*.xml
          reporter: java-junit        # Format of test results

#      - name: Enable KVM
#        run: |
#          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
#          sudo udevadm control --reload-rules
#          sudo udevadm trigger --name-match=kvm
#
#      - name: Gradle cache
#        uses: gradle/actions/setup-gradle@v3
#
#      - name: AVD cache
#        uses: actions/cache@v4
#        id: avd-cache
#        with:
#          path: |
#            ~/.android/avd/*
#            ~/.android/adb*
#          key: avd-${{ matrix.api-level }}
#
#      - name: create AVD and generate snapshot for caching
#        if: steps.avd-cache.outputs.cache-hit != 'true'
#        uses: reactivecircus/android-emulator-runner@v2
#        with:
#          api-level: ${{ matrix.api-level }}
#          force-avd-creation: false
#          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
#          disable-animations: false
#          script: echo "Generated AVD snapshot for caching."

#      - name: Run Android Instrumentation tests
#        uses: ReactiveCircus/android-emulator-runner@v2
#        with:
#          api-level: ${{ matrix.api-level }}
#          target: ${{ matrix.target }}
#          arch: x86_64
#          script: ./gradlew connectedCheck
#
#      - name: Upload Android Test Report directory
#        uses: actions/upload-artifact@v4
#        with:
#          name: androidTest-results
#          path: |
#            **/build/outputs/androidTest-results/
#          retention-days: 1
#
#      - name: Publish Android Test Report
#        uses: dorny/test-reporter@v1
#        if: success() || failure()    # run this step even if previous step failed
#        with:
#          name: Android Test Report     # Name of the check run which will be created
#          path: |
#            **/build/outputs/androidTest-results/connected/**/*.xml
#          reporter: java-junit        # Format of test results

      - name: Build Android Instrumentation TestAPK
        run: ./gradlew assembleAndroidTest

      - name: Run tests on Firebase Test Lab
        uses: asadmansr/Firebase-Test-Lab-Action@v1.0
        with:
          arg-spec: '.github/android/androidTestConfig.yml:pixel6-api-33'
        env:
          SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}

